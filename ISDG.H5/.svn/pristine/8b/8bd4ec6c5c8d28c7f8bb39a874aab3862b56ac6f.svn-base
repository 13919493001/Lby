<template>
  <div class="goods">
    <div class="menu hidden-xs-only">
      <div class="p-menu">
        <div
          v-for="(item, index) in menu"
          :key="index"
          class="item"
          :class="{ active: menuId === index }"
          @click="menuId = index"
        >
          {{ item.cate_name }}
        </div>
      </div>
      <div class="s-menu">
        <div
          v-for="(item, index) in menu[menuId].children"
          :key="index"
          class="item"
        >
          {{ item.cate_name }}
        </div>
      </div>
    </div>
    <div v-swiper:swiperTop="swiperOptionTop" class="swiper-container">
      <div class="swiper-wrapper">
        <div class="swiper-slide" v-for="(item, index) in 3" :key="index">
          <img src="@/static/demo/home1.jpg" />
        </div>
      </div>
      <div class="swiper-pagination"></div>
      <!--分页器。如果放置在swiper-container外面，需要自定义样式。-->
    </div>
    <div class="content">
      <div class="top">
        <div class="left">
          <div class="now">分类名称</div>
          <div>全部</div>
        </div>
        <div class="right">
          <el-dropdown @command="handleCommand">
            <span class="el-dropdown-link">
              {{ sort }}<i class="el-icon-arrow-down el-icon--right"></i>
            </span>
            <el-dropdown-menu slot="dropdown">
              <el-dropdown-item
                command="sort1"
                :class="{ active: active === 'sort1' }"
                >默认排序</el-dropdown-item
              >
              <el-dropdown-item
                command="sort2"
                :class="{ active: active === 'sort2' }"
                >价格由高到低</el-dropdown-item
              >
              <el-dropdown-item
                command="sort3"
                :class="{ active: active === 'sort3' }"
                >价格由低到高</el-dropdown-item
              >
            </el-dropdown-menu>
          </el-dropdown>
          <div class="select" @click="select = !select">筛选</div>
        </div>
      </div>
      <el-collapse-transition>
        <div class="dialog" v-if="select">
          <div class="dialog-select">
            <div class="like">
              <div class="dialog-title">猜你喜欢</div>
              <div v-for="(item, index) in 4" :key="index" class="dialog-item">
                <div></div>
                <div>所有</div>
              </div>
            </div>
            <div class="size">
              <div class="dialog-title">规格</div>
              <div v-for="(item, index) in 4" :key="index" class="dialog-item">
                <div></div>
                <div>所有</div>
              </div>
            </div>
          </div>
          <div class="btns">
            <div class="btn">取消</div>
            <div class="btn2">确定</div>
          </div>
        </div>
      </el-collapse-transition>
      <goods :goodsList="goodsList"/>
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size="limit"
        @prev-click="last"
        @next-click="next"
        prev-text="上一页"
        next-text="下一页"
        :pager-count="5"
      >
      </el-pagination>
    </div>
  </div>
</template>

<script>
import goods from "@/components/goods";
import api from '@/plugins/api/api'
export default {
  components: {
    goods
  },
  data() {
    return {
      swiperOptionTop: {
        grabCursor: true,
        autoplay: true,
        loop: true,
        pagination: {
          el: ".swiper-pagination"
        }
      },
      active: "sort1",
      sort: "默认排序",
      select: false,
      menu: [{children:{}}],
      menuId: 0,
      scrollTop: 0,
      fixed1: false,
      goodsList:[],
      limit:8,
      total:0,
      page:1
    };
  },
  methods: {
    handleCommand(e) {
      this.active = e;
      e === "sort1"
        ? (this.sort = "默认排序")
        : e === "sort2"
        ? (this.sort = "价格由高到低")
        : (this.sort = "价格由低到高");
    },
    init() {
      let params = {page:this.page,limit:this.limit};
      api.home.goodsMenu().then(res => {
        console.log(res);
        this.menu = res.data  
      }),
      api.home.getGoods(params).then(res =>{
        console.log(res);
        this.goodsList = res.data
      })
      api.home.getGoods().then(res =>{
        this.total=res.data.length
      })
    },
    last(){
      this.page-=1
      api.home.getGoods({page:this.page,limit:this.limit}).then(res =>{
        console.log(res);
        this.goodsList = res.data
      })
    },
    next(){
      this.page+=1
      api.home.getGoods({page:this.page,limit:this.limit}).then(res =>{
        console.log(res);
        this.goodsList = res.data
      })
    }
  },
  created() {
    this.init();
  }
};
</script>

<style lang="scss" scoped>
/deep/.el-dropdown-menu__item {
  &:hover {
    background: #fff;
    color: #5dd2b1;
  }
}
.active {
  color: #999999;
}
.swiper-pagination-bullet {
  opacity: 1;
  background-color: #fff;
}
.swiper-pagination-bullet-active {
  background-color: #225c45 !important;
}
.swiper-slide {
  img {
    width: 100%;
    object-fit: cover;
  }
}
.goods {
  width: 100%;
  min-height: 100vh;
  background-color: #f7f4f8;
  .menu {
    width: 100%;
    background-color: #fff;
    .p-menu {
      border-top: 1px solid #eeeeee;
      @include flex;
      height: 100px;
      .item {
        cursor: pointer;
        margin: 0 20px;
        height: 100%;
        border-bottom: 3px solid transparent;
        @include flex;
      }
      .active {
        border-color: #5dd2b1;
        color: #5dd2b1;
        box-sizing: border-box;
      }
    }
    .s-menu {
      border-top: 1px solid #eeeeee;
      @include flex;
      height: 100px;
      .item {
        margin: 0 20px;
        cursor: pointer;
      }
    }
  }
  .content {
    max-width: 1200px;
    padding: 67px 10px 70px 10px;
    box-sizing: border-box;
    margin: 0 auto;
    @include pagination;
    .top {
      width: 100%;
      @include flex;
      justify-content: space-between;
      .left {
        @include flex;
        .now {
          color: #5dd2b1;
          margin-right: 40px;
        }
      }
      .right {
        @include flex;
        /deep/.el-dropdown {
          cursor: pointer;
          margin-right: 30px;
        }
        .select {
          cursor: pointer;
        }
      }
    }
    .dialog {
      width: 100%;
      padding: 40px 0;
      padding-bottom: 0;
      .dialog-select {
        width: 100%;
        @include flex;
        .like {
          margin-right: 40px;
          .dialog-title {
            font-weight: bold;
            margin-bottom: 30px;
          }
          .dialog-item {
            @include flex;
            margin-bottom: 20px;
            &:last-child {
              margin-bottom: 0;
            }
            div:first-child {
              width: 16px;
              height: 16px;
              background: rgba(255, 255, 255, 1);
              border: 1px solid rgba(220, 220, 220, 1);
              margin-right: 10px;
              cursor: pointer;
              @include flex;
            }
          }
        }
        .size {
          margin-right: 0;
          margin-left: 40px;
          @extend .like;
        }
      }
      .btns {
        width: 100%;
        margin: 0 auto;
        @include flex;
        margin-top: 30px;
        .btn {
          width: 100px;
          height: 45px;
          @include flex;
          border: 1px solid rgba(191, 191, 191, 1);
          margin-right: 20px;
          cursor: pointer;
        }
        .btn2 {
          @extend .btn;
          color: #fff;
          background-color: #333;
          border-color: #333;
          margin-right: 0;
        }
      }
    }
  }
  .sub-content {
    margin-top: 50px;
  }
}

@media screen and (max-width: 768px) {
  .swiper-slide {
    img {
      width: 100%;
      height: px(428);
      object-fit: cover;
    }
  }
  .goods {
    width: 100%;
    min-height: 100vh;
    background-color: #fff;
    .content {
      width: 100%;
      padding: px(50) px(24) px(70) px(24);
      box-sizing: border-box;
      margin: 0 auto;
      @include pagination("m");
      .top {
        width: 100%;
        @include flex;
        justify-content: space-between;
        font-size: px(24);
        .left {
          @include flex;
          .now {
            color: #5dd2b1;
            margin-right: px(20);
          }
        }
        .right {
          @include flex;
          /deep/.el-dropdown {
            cursor: pointer;
            margin-right: px(30);
            font-size: px(24);
          }
          .select {
            cursor: pointer;
          }
        }
      }
      .dialog {
        width: 100%;
        padding: px(60) 0;
        padding-bottom: 0;
        font-size: px(24);
        .dialog-select {
          width: 100%;
          @include flex;
          .like {
            margin-right: 40px;
            .dialog-title {
              font-weight: bold;
              margin-bottom: px(40);
            }
            .dialog-item {
              @include flex;
              margin-bottom: px(30);
              &:last-child {
                margin-bottom: 0;
              }
              div:first-child {
                width: 16px;
                height: 16px;
                background: rgba(255, 255, 255, 1);
                border: 1px solid rgba(220, 220, 220, 1);
                margin-right: 10px;
                cursor: pointer;
                @include flex;
              }
            }
          }
          .size {
            margin-right: 0;
            margin-left: 40px;
          }
        }
        .btns {
          width: 100%;
          margin: 0 auto;
          @include flex;
          margin-top: 30px;
          .btn {
            width: px(200);
            height: px(68);
            @include flex;
            border: 1px solid rgba(191, 191, 191, 1);
            margin-right: px(34);
            cursor: pointer;
          }
          .btn2 {
            color: #fff;
            background-color: #333;
            border-color: #333;
            margin-right: 0;
          }
        }
      }
    }
    .sub-content {
      margin-top: 50px;
      padding: 0 px(32);
      box-sizing: border-box;
    }
  }
}
</style>
